create a repo for the project <33

push existing code onto github <33

return image title
--link returning image to pressing search button
--link the search to the input

construct image URL
--create variables for base url, image id, and iiff
--convert use states into variables, and console log URL
--find out why the code is rendering 5 times.
(the continous fetches are messing with my api access)
--return image on browser

-useEffect to prevent the code form automatically rendering continously.
-- find another endpoint to use
-- see if there is anything I can do to make the artwork depicted more accurate to the search word. 
-- use Flexbox to improve app structure
-- do some CSS to make it pretty :)

-- create an artist endpoint






----New Quest----
Question: 
Why is the button not working on the first render? Why do I have to click it twice in order for it to give me back a picture?

Answer:
The image_Id does not exist by the time line 75 runs, which fetches the image. 

The first time line 65 runs, it does not return the specific artwork requested, but an object that contains an array of more artwork, with different titles than the title originally fetched. 

On the second render, for some reason the object returned is the specific  was looking for

The reason is, the api is running without the artwork id present, so it fetches an array of art, not the specific work saved in the id useState.

In order to fix this, a useEffect is needed to watch the state of image and artwork ids. When the state is changed, it should fetch the data with the image. This way, the ids are not just saved, but used for returning the image to the browser.

However, I cannot execute a useEffect inside of my handleClick function, so I need to set the button inside of handleClick, and make image_id and artwork a dependency OUTSIDE of the handleClick function. This way the useEffect and function both execute, without complicating my code.


---had to fix useEffect using chat, since I couldn't figure out what as wrong



--install route library and create routes and components

-- useState for artist
Use artist state as artist query for artist fetch
--make a button that reroutes to another page
Import {useNavigate} from ‘react-router-dom’ //to App
Create a button, onClick={() => useNavigate(‘/artist’)}
Add <Routes> to return in app
Add <Route path=’/artist’ element={<Artist/>}
--If artist does not exist, alert "please search for artwork first"
-- artist exist? using artists, fetch artists data
Return the artist info object, and display info. 
Pass appropriate props to the component (artist useState)
-- return a display of artists info. 










